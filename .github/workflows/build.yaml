name: Main Build

on:
    workflow_dispatch:
    pull_request:
      branches: [main]

env:
    REGISTRY: ghcr.io
    NAMESPACE: jaydee029
    IMAGE_TAG: latest

jobs:
    build-Push-galasabld :
        name: Build and push Galasabld artefacts
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup up Go
              uses: actions/setup-go@v5
              with: 
                go-version: 1.22
            
            - name: Build galasabld using the makefile
              run: |
                echo $REGISTRY
                make all 

            - name: Login to Github Container Regitery
              uses: docker/login-action@v3
              with:
                registry: ${{env.REGISTRY}}
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
            
            - name: Extract metadata for Galasabld Image
              id: metadata
              uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
              with:
                images: ${{env.REGISTRY}}/${{env.NAMESPACE}}/galasabld-amd64
              
            - name: Build galasa Image for testing
              uses: docker/build-push-action@v5
              with:
                context: .
                file: dockerfiles/galasabld/dockerfile.galasabld
                build-args: platform=linux-amd64
                load: true
                tags: galasabld-amd64:${{env.IMAGE_TAG}}
              
            - name: Testing Galasabld Image
              run: |
                docker run --rm galasabld-amd64:$IMAGE_TAG          
              
            - name: Build and push Galsabld Image
              uses: docker/build-push-action@v5
              with:
                context: .
                file: dockerfiles/galasabld/dockerfile.galasabld
                build-args: platform=linux-amd64
                push: true
                tags: ${{ steps.metadata.outputs.tags }}
                labels: ${{ steps.metadata.outputs.labels }}


            #TODOs: setup Java, deploy to github maven repository

#TODOs: Add Job: ADD ibm-executable job
    build-Push-galasabld-ibm:
      name: Build and Push Galasabld IBM Image
      runs-on: ubuntu-latest
      needs: build-Push-galasabld

      steps:
        - name: Checkout code
          uses: actions/checkout@v4
         
        - name: Login to Github Container Regitery
          uses: docker/login-action@v3
          with:
            registry: ${{env.REGISTRY}}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        
        - name: Extract metadata for Galasabld Image
          id: metadata
          uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
          with:
            images: ${{env.REGISTRY}}/${{env.NAMESPACE}}/galasabld-ibm
          
        - name: Build galasa Image for testing
          uses: docker/build-push-action@v5
          with:
            context: .
            file: dockerfiles/galasabld/dockerfile.galasabld-ibm
            build-args: |
             dockerRepository=ghcr.io
             branch=pr-4
            load: true
            tags: galasabld-ibm:${{env.IMAGE_TAG}}
          
        - name: Testing Galasabld Image
          run: |
            docker run --rm galasabld-ibm:$IMAGE_TAG          
          
        - name: Build and push Galsabld-Ibm Image
          uses: docker/build-push-action@v5
          with:
            context: .
            file: dockerfiles/galasabld/dockerfile.galasabld-ibm
            build-args: |
             dockerRepository=ghcr.io, branch=pr-4
            push: true
            tags: ${{ steps.metadata.outputs.tags }}
            labels: ${{ steps.metadata.outputs.labels }}
          


    build-Push-openapi2beans:
        name: Build and push openapi2beans artefacts
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup up Go
              uses: actions/setup-go@v5
              with: 
                go-version: 1.22
            
            - name: Build openapi2beans using the makefile
              run: |
                make all -C openapi2beans/

            - name: Login to Github Container Regitery
              uses: docker/login-action@v3
              with:
                registry: ${{env.REGISTRY}}
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
            
            - name: Extract metadata for openapi2beans Image
              id: metadata
              uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
              with:
                images: ${{env.REGISTRY}}/${{env.NAMESPACE}}/openapi2beans
              
            - name: Build openapi2beans Image for testing
              uses: docker/build-push-action@v5
              with:
                context: .
                file: dockerfiles/openapi2beans/dockerfile.openapi2beans
                build-args: platform=linux-x86_64
                load: true
                tags: openapi2beans:${{env.IMAGE_TAG}}
              
            - name: Testing openapi2beans Image
              run: |
                docker run --rm openapi2beans:$IMAGE_TAG          
              
            - name: Build and push openapi2beans Image
              uses: docker/build-push-action@v5
              with:
                context: .
                file: dockerfiles/openapi2beans/dockerfile.openapi2beans
                build-args: platform=linux-x86_64
                push: true
                tags: ${{ steps.metadata.outputs.tags }}
                labels: ${{ steps.metadata.outputs.labels }}            
              
            #TODOs: setup Java, deploy to github maven repository
            
            
    
            
            